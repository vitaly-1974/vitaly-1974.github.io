define("menuButton",["lodash","react","core","reactDOM","santaProps"],function(a,b,c,d,e){"use strict";var f=c.compMixins;function g(a){a=a&&a.trim();return a||"Â "}return{displayName:"MenuButton",propTypes:{isMobileView:e.Types.isMobileView,isMobileDevice:e.Types.Device.isMobileDevice,isTabletDevice:e.Types.Device.isTabletDevice,compProp:e.Types.Component.compProp,compData:e.Types.Component.compData,style:e.Types.Component.style,refInParent:e.Types.Component.refInParent,isContainer:b.PropTypes.bool,isSelected:b.PropTypes.bool,display:b.PropTypes.string,positionInList:b.PropTypes.string,dir:b.PropTypes.string,mouseEnterHandler:b.PropTypes.func.isRequired,mouseLeaveHandler:b.PropTypes.func.isRequired,onMouseClick:b.PropTypes.func.isRequired,isDropDownButton:b.PropTypes.bool},statics:{useSantaTypes:true},mixins:[f.skinBasedComp,f.skinInfo],getInitialState:function(){return{$container:this.props.isContainer?"drop":"menu",$selected:this.props.isSelected?"selected":"",$state:"idle",$type:this.props.compData.link?"link":"header",$mobile:this.props.isMobileDevice||this.props.isMobileView||this.props.isTabletDevice?"mobile":"notMobile"}},componentWillReceiveProps:function(a){this.setState({$selected:a.isSelected?"selected":""})},getSkinProperties:function(){var c=this.props.compData;var d=this.props.compProp.alignText;var e={parentConst:b.DOM.a,style:a.merge(this.props.style||{},{display:this.props.display,position:"relative",boxSizing:"border-box",color:"grey"}),onClick:this.onMouseClick,"data-listposition":this.props.positionInList};if(this.state.$mobile!=="mobile"){a.assign(e,{onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave})}if(c.link){a.merge(e,c.link.render)}return{"":e,bg:{style:{textAlign:d}},label:{children:g(c.label),dir:this.props.dir,style:{textAlign:d}}}},onMouseEnter:function(){if(this.props.compData.link||this.props.refInParent==="__more__"){this.setState({$state:"over"})}var a=d.findDOMNode(this);this.props.mouseEnterHandler(this.props.refInParent,a.getAttribute("data-listposition"))},onMouseLeave:function(){if(this.props.isDropDownButton){this.setIdleState()}this.props.mouseLeaveHandler(this.props.refInParent)},onMouseClick:function(a){if(this.state.$mobile!=="notMobile"){this.props.onMouseClick(a,this.props.refInParent,this.props.isDropDownButton)}},setIdleState:function(){this.setState({$state:"idle"})}}});